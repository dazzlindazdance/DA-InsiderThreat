[default]
disabled = 0

[Risk Score Degradation]
action.email.useNSSubject = 1
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.param.verbose = 0
action.summary_index = 1
action.summary_index._name = it_risk
action.threat_add.param.verbose = 0
alert.track = 0
cron_schedule = 45 * * * *
description = Search that reduces the risk score over time back to 0
dispatch.earliest_time = -7d
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = DA-InsiderThreat
request.ui_dispatch_view = search
schedule_window = auto
search = index=it_risk NOT search_name="Risk Score Degratation |`get_identity4insiderevents(risk_object)`| `unique_identifier_extraction(risk_object)`|stats sum(risk_score) AS sum_risk_score,max(_time) AS last_time,first(risk_object_unique_identifier) as risk_object by risk_object_identity_id| eval _time=now()| where sum_risk_score>0 AND last_time+3600<_time| eval reason="risk score reduction as no activitiy in last hour",risk_score=[| inputlookup risk_degradation_score| return $auto_risk_degradation] | fields _time,risk_score,reason,risk_object

# Should Insider have it's own security Domain within ES??
[Insider - Insider Threat Risk Threshold Breached - Rule]
action.correlationsearch.annotations = {}
action.correlationsearch.enabled = 1
action.correlationsearch.label = Insider Threat Risk Threshold Breached
action.customsearchbuilder.spec = {}
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.drilldown_name = Show Risk Score modifications
action.notable.param.drilldown_search = index=it_risk identity=$user$
action.notable.param.extract_artifacts = {"asset":[],"identity":["user","src_user","_risk_user"]}
action.notable.param.rule_description = The investigation threshold has been breached for a user.
action.notable.param.rule_title = Investigation Threshold Breached - Insider Threat
action.notable.param.security_domain = insider
action.notable.param.severity = high
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
alert.suppress = 1
alert.suppress.fields = user
alert.suppress.period = 60s
alert.track = 1
counttype = number of events
cron_schedule = 37 * * * *
dispatch.earliest_time = -7d
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = index=it_risk |`get_identity4insiderevents(risk_object)`| `unique_identifier_extraction(risk_object)`| stats sum(risk_score) AS risk_score,count(risk_score) as risk_event_count,values(risk_object_unique_identifier) AS risk_object by risk_object_identity_id|eval risk_object_type="user"|appendcols [|inputlookup notable_trigger_threshold| fields notable_trigger_threshold | rename notable_trigger_threshold AS risk_threshold] | eventstats values(risk_threshold) AS risk_threshold| where risk_score>risk_threshold | eval user=risk_object| `get_risk_severity(risk_score)`

[Threat - Insider - User Possibly Emailing Themselves - Rule]
action.correlationsearch.annotations = {}
action.correlationsearch.enabled = 1
action.correlationsearch.label = Insider - User Possibly Emailing Themselves
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.email.show_password = 1
action.insider_risk = 1
action.insider_risk.forceCsvResults = 1
action.insider_risk.param._insider_risk_object = src_user
action.insider_risk.param._insider_risk_object_type = user
action.insider_risk.param._insider_risk_score = 50
action.insider_risk.param.verbose = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 22 * * * *
description = Probable user emailing themselves
disabled = true
dispatch.earliest_time = -65m@m
dispatch.latest_time = -5m@m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = | from datamodel:Email.All_Email\
| `get_identity4events(src_user)` \
| rex field=recipient "^(?<recipient_prefix>[^\@]+)"\
| eval src_user_identity=mvappend(src_user_first+"_"+src_user_last,src_user_identity) \
| eval src_user_identity=mvappend(src_user_last+"_"+src_user_first,src_user_identity) \
| eval recipient_match=if(match(src_user_identity,recipient_prefix),1,0)\
| where recipient_match=1\
| stats count,values(file_name) AS file_name,sum(file_size) AS file_size by _time,src_user,recipient,subject \
| fields - count
